// C++ program to check if a given tree is BST.
#include <bits/stdc++.h>
using namespace std;

struct Node 
{
	int data;
	struct Node *left, *right;
	Node(int data)
	{
		this->data = data;
		left = nullptr;
        right = nullptr;
	}
};

void isBSTUtil(Node* root , int l ,int r , bool &ans)
{
	if (!ans or !root)  return ;
    if(root->data<l or root->data>r)    ans=0;
    isBSTUtil(root->left , l, root->data-1 , ans);
    isBSTUtil(root->right , root->data+1 , r , ans);
}

bool isBST(Node* root)
{
	bool ans = 1;
    isBSTUtil(root , INT_MIN, INT_MAX, ans);
    return ans;
}

/* Driver code*/
int main()
{
	struct Node* root = new Node(5);
	root->left = new Node(2);
	root->right = new Node(15);
	root->left->left = new Node(1);
	root->left->right = new Node(4);

	if (isBST(root))
		cout << "Is BST";
	else
		cout << "Not a BST";

	return 0;
}
