/*
T = AABAACAADAABAABA
P = AABA
*/

#include<bits/stdc++.h>
#define D 256
using namespace std;

int rabinKarp(string txt, string pat, int p_no) 
{
    int txt_len = txt.length();
    int pat_len = pat.length();

    int t = 0;
    int p = 0;
    int h = 1;

    for(int i=0; i<pat_len; i++) 
    {
        p = (D*p + pat[i])%p_no;
        t = (D*t + txt[i])%p_no;
    }

    for(int i=0; i<pat_len-1; i++)   h = (h*D)%p_no;

    for(int i=0; i<=txt_len-pat_len; i++) 
    {
        cout << p << " " << t << endl;
        if(p == t) 
        {
            int j;
            for (j = 0; j < pat_len; j++) 
            { 
				if (txt[i+j] != pat[j]) 
					break; 
			} 
            if(j == pat_len)
                cout <<"Pattern found at index "<<i ;
        }

        if(i < txt_len-pat_len) 
        {
            t = (D * (t - txt[i]*h) + txt[i+pat_len])%p_no;

            if(t < 0) 
            {
                t += p_no;
            }
        }
    }

    return -1;
}
// abcdef
// 0 - 255 = 256
// abc = (a * (256^2) + b * (256^1) + c * (256^0))%101 
// bcd = (D(t - text[i]*h) + text[i+m])%q;

int main() {
    string T = "AABAACAADAABAABA";
    string p = "AABA";

    cout << rabinKarp(T, p, 7583);
}
