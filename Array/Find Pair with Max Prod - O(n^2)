// Time complexity - O(n^2)
// Given an array with both +ive and -ive integers, return a pair with highest product.
// Examples :  
// Input: arr[] = {1, 4, 3, 6, 7, 0}  
// Output: {6,7}  
// Input: arr[] = {-1, -3, -4, 2, 0, -5} 
// Output: {-4,-5}

#include<bits/stdc++.h>
using namespace std;

void prod(vector<int>arr , int n)
{
    if(n<2) {
        cout<<"No pairs exists\n";
        return;
    }
    int a = arr[0];
    int b = arr[1];

    for(int i=0 ; i<n ; i++)
        for(int j=i+1 ; j<n ; j++)
            if(arr[i]*arr[j]>a*b)
                a = arr[i],b = arr[j];
    cout<<"max product pair is "<<a<<" "<<b<<endl;
}

int main()
{
    vector<int>arr = {1,4,3,6,7,0};
    int n = 6;
    prod(arr,n);
    return 0;   
}
